package apcs;


import java.util.ArrayList;

public class Zombie_apocalypse {

	/**
	 * @param args
	 */
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Window.size (1000, 1000);
		boolean start = false;
		boolean alive = true;
		int x = 0;
		int y = 0;
		int bulletCount = 0;
		int coolDown = 500;
		int health = 100;
		int timer = 0;
		int pastTimer = 0;
		int pastTimer2 = 0;
		int zombieTimer = 0;
		int round = 1;
		String weapon = "shotgun";
		
		ArrayList<NewZombie> zombies = new ArrayList<NewZombie>();

		Bullet [] bullets = new Bullet[10];
		
		wall [] walls = new wall[10];
		
		while(true){
			
			x = 0;
			y = 0;
			bulletCount = 0;
			alive = true;
			start = false;
			health = 100;
			timer = 0;
			pastTimer = 0;
			zombieTimer = 0;
			round = 1;
			weapon = "pistol";
			
			while(start == false){
				
				Window.out.background("white");
				Window.out.color("black");
				Window.out.print("start", 480, 500);
				Window.frame();
				if(Window.mouse.clicked() == true){
					
					start = true;
				}
				Window.sleep(20);
			}
			
			for(int i = 0; i < 5; i ++){
				
				zombies.add(new NewZombie("normal", i));
			}
			
			while(alive == true){
				
				Window.out.background("white");
				
				
				//Z

				for(NewZombie joe : zombies){
					
					if(joe != null && joe.dead == 1){
						
						zombies.remove(0);
					}
					
					if(joe != null && joe.dead == 0){
						
						for(wall bob : walls){
							
							if(bob != null && (Math.abs(bob.x - joe.x) < bob.width/2 + 10 && joe.y > bob.y - bob.height/2 && joe.y < bob.y + bob.height/2)){
								
								if(joe.x < bob.x){
									
									joe.stop("leftW");
								}
								else{
									
									joe.stop("rightW");
								}
							}
							
							if(bob != null && (Math.abs(bob.y - joe.y) < bob.height/2 + 10 && joe.x > bob.x - bob.width/2 && joe.x < bob.x + bob.width/2)){
								
								if(joe.y < bob.y){
									
									joe.stop("upW");
								}
								else{
									
									joe.stop("downW");
								}
							}
						}
						
						for(NewZombie billy : zombies){
							
							if(billy != joe && billy != null && billy.dead == 0 && (Math.abs(billy.x - joe.x) < 5 || Math.abs(billy.y - joe.y) < 5)){
								
								if(joe.x < billy.x){
									
									joe.stop("left");
								}
								else if(joe.x > billy.x){
									
									joe.stop("right");
								}
								if(joe.y < billy.y){
									
									joe.stop("up");
								}
								else if(joe.y > billy.y){
									
									joe.stop("down");
								}
							}
						}
						
						if(Math.abs(joe.x - x) < 10 && Math.abs(joe.y - y) < 10 && joe.dead == 0){
							
							health = health - 1;
						}
						
						for(Bullet poop : bullets){
							
							if(poop != null && poop.hit == 0){
								
								joe.health((int)(poop.x), (int)(poop.y));
							}
						}
					}
					
					if(joe.dead == 0){
						
						joe.followPlayer(x,y);
						joe.draw();
					}
				}
				
				
				// person
				
				Window.out.color("black");
				Window.out.circle(x, y, 10);
				if(Window.key.pressed("w")){
					
					y = y-7;
				}
				if(Window.key.pressed("s")){
					
					y = y+7;
				}
				if(Window.key.pressed("a")){
					
					x = x-7;
				}
				if(Window.key.pressed("d")){
					
					x = x+7;
				}
				if(health < 1){
					
					alive = false;
				}
				
				//bullet
				
				if(bulletCount > 9){
					
					bulletCount = 0;
				}
				
				for(Bullet poop : bullets){
					
					if(Window.mouse.clicked() == true && coolDown < 0){
						
						if(weapon.equals("pistol") == true){
						
							coolDown = 300;
							bullets[bulletCount] = new Bullet(x, y, "pistol");
							bulletCount = bulletCount + 1;
						}
						else if(weapon.equals("shotgun") == true){

							for(int i = 0; i <= 4; i++){
								
								coolDown = 1700;
								bullets[bulletCount] = new Bullet(x, y, "shotgun");
								bulletCount = bulletCount + 1;
								if(bulletCount > 9){
									
									bulletCount = 0;
								}
							}
						}
					}
					
					if(poop != null && poop.hit == 0){
						
						for(NewZombie joe : zombies){
							
							if(joe.dead == 0){
								
								poop.checkHit(joe.x, joe.y);
							}
						}
					}
					
					if(poop != null && poop.hit == 0){
						
						poop.goToTarget();
						poop.draw();
					}
				}
				
				//walls
				
				walls[0] = new wall(500,500,100,100);
				walls[1] = new wall(250,250,150,20);
				walls[2] = new wall(250,750,20,150);
				walls[3] = new wall(750,250,20,150);
				walls[4] = new wall(750,750,150,20);
				
				for(wall bob : walls){
					
					if(bob != null){
						
						bob.Draw();
					}
				}
				
				//other stuff
				
				if(zombieTimer - pastTimer > 1){
					
					zombies.add(new NewZombie("normal", zombies.size()));
					pastTimer = zombieTimer;
				}
				
				if(round > 1){
					
					if(Window.key.pressed("1")){
						
						weapon = "pistol";
					}
					
					if(Window.key.pressed("2")){
						
						weapon = "shotgun";
					}
					
					if(zombieTimer - pastTimer2 > 2){
						
						zombies.add(new NewZombie("small", zombies.size()));
						zombies.add(new NewZombie("small", zombies.size()));
						zombies.add(new NewZombie("small", zombies.size()));
						pastTimer2 = zombieTimer;
					}
				}
				
				timer = timer + 38;
				if(timer - 999/1000 > zombieTimer){
					
					zombieTimer = timer/1000;
				}
				
				if(zombieTimer > 0 && round == 1 && zombies.size() == 0){
					
					round = 2;
					Window.out.background("black");
					Window.out.color("white");
					Window.out.print("Round 2", 470, 600);
					Window.frame();
					Window.sleep(3000);
				}
				
				if(zombieTimer > 90 && round == 2){
					
					round = 3;
					Window.out.background("black");
					Window.out.color("white");
					Window.out.print("Round 3", 470, 600);
					Window.frame();
					Window.sleep(3000);
				}
				
				Window.out.color("black");
				Window.out.print(zombies.size(), 300, 300);
				Window.out.print(health, 490, 500);
				coolDown = coolDown - 50;
				Window.sleep(1);
				Window.frame();
			}
		}
	}
}
